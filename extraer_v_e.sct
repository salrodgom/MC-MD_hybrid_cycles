#! /bin/bash
function extraer {
     pala=`awk '{print $1}' stat | head -n2 | tail -n1`
     if [ "$pala" = "ENERGY" ] ; then add=2 ; fi
     if [ "$pala" != "ENERGY" ] ; then add=0 ; fi
     tmp2=`awk '{if (NF==3) print $1,$2,$3,NR}' stat | sed '/ENERGY/d' | awk '{print $4}' | head -n1`
     tmp1=`awk '{if (NF==3) print $1,$2,$3,NR}' stat | sed '/ENERGY/d' | awk '{print $4}' | head -n2 | tail -n1`
     jump=`echo "$tmp1 - $tmp2" | bc -l`
     awk -v add=$add '{ for (i=1+add; i<16000;i+='$jump') if (NR==i) { print $2} }' stat >  STATIS.time
     awk -v add=$add ' { for (i=2+add;i<16000;i+='$jump') if (NR==i) { print $3} }' stat  | awk '{ s += $1 } {print $1,s/NR}'  > STATIS.tmp1
     paste  STATIS.time STATIS.tmp1 > econf
     awk -v add=$add ' { for (i=3+add;i<16000;i+='$jump') if (NR==i) { print $5} }' stat  | awk '{ s += $1 } {print $1,s/NR}'  > STATIS.tmp1
     paste  STATIS.time STATIS.tmp1 > enth
     awk -v add=$add ' { for (i=2+add;i<16000;i+='$jump') if (NR==i) { print $3} }' stat  | awk '{ s += $1 } {print $1,s/NR}'  > STATIS.tmp1
     paste  STATIS.time STATIS.tmp1 > econf
     awk -v add=$add ' { for (i=2+add;i<16000;i+='$jump') if (NR==i) { print $2} }' stat  | awk '{ s += $1 } {print $1,s/NR}'  > STATIS.tmp1
     paste  STATIS.time STATIS.tmp1 > temp
     awk -v add=$add ' { for (i=5+add;i<16000;i+='$jump') if (NR==i) { print $5} }' stat  | awk '{ s += $1 } {print $1,s/NR}'  > STATIS.tmp1
     paste  STATIS.time STATIS.tmp1 > tempcs
     awk -v add=$add ' { for (i=5+add;i<16000;i+='$jump') if (NR==i) { print $4} }' stat  | awk '{ s += $1 } {print $1,s/NR}'  > STATIS.tmp1
     paste  STATIS.time STATIS.tmp1 > vol

}
rm vol econf temp enth
for i in `seq 1 $1` ; do
    cd MD_$i
       cp STATIS stat
       extraer
    cd ..
    cat MD_$i/vol   >> vol
    cat MD_$i/econf >> econf
    cat MD_$i/temp  >> temp
    cat MD_$i/enth  >> enth
    rm MD_$i/vol MD_$i/econf MD_$i/temp MD_$i/enth
done
i=0
while read line ; do
  let i++
  echo "$i $line" >> vol2
done < vol
i=0
while read line ; do
  let i++
  echo "$i $line" >> econf2
done < econf
i=0
while read line ; do
  let i++
  echo "$i $line" >> temp2
done < temp
i=0
while read line ; do
  let i++
  echo "$i $line" >> enth2
done < enth
mv vol2 vol
mv econf2 econf
mv temp2 temp
mv enth2 enth
echo "set t postscript eps color enhanced blacktext 'Helvetica,14' ; set o 'v_e.eps'" > gp
echo 'set ytics nomirror ; set y2tics nomirror' >> gp
echo "set size 1,0.5 ; set multiplot ; set size 0.5,0.5 ; set origin 0.0,0.0 " >> gp
echo "set xlabel 'steps' ; set ylabel 'L / \AA' ; set y2label 'U / eV' ; set y2tics"  >> gp
echo "plot 'vol' u (\$1*10*0.0001):((\$3/8.0)**(1/3.0)) w p pt 6 ps 0.2 t 'L','./econf' u (\$1*10*0.0001):3 axes x1y2 w p pt 6 ps 0.2 lc rgb 'blue' t 'U'" >> gp
echo "set ylabel 'T / K' ; set y2label 'H / eV'" >> gp
echo "set origin 0.5,0.0 ; plot 'temp' u (\$1*10*0.0001):3 w p pt 6 ps 0.2 t 'T','enth' u (\$1*10*0.0001):3 axes x1y2 w p pt 6 ps 0.2 lc rgb 'blue' t 'H'" >> gp
echo "unset multiplot ; pause mouse" >> gp
gnuplot < gp
